{
  "apiName": "api",
  "apiId": "",
  "deploymentName": "main",
  "environmentIds": [
    ""
  ],
  "api": {
    "enableGraphqlEndpoint": false,
    "operations": [
      {
        "content": "query Countries {\n  countries: countries_countries {\n    code\n    name\n  }\n}\n",
        "name": "Countries",
        "responseSchema": "{\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"countries\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"additionalProperties\":false,\"required\":[\"code\",\"name\"]}}},\"additionalProperties\":false,\"required\":[\"countries\"]}},\"additionalProperties\":false}",
        "variablesSchema": "{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false}",
        "interpolationVariablesSchema": "{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false}",
        "operationType": 0,
        "cacheConfig": {
          "enable": true,
          "maxAge": 60,
          "public": true,
          "staleWhileRevalidate": 60
        },
        "authenticationConfig": {
          "authRequired": false
        },
        "authorizationConfig": {
          "claims": [],
          "roleConfig": {
            "requireMatchAll": [],
            "requireMatchAny": [],
            "denyMatchAll": [],
            "denyMatchAny": []
          }
        },
        "liveQueryConfig": {
          "enable": true,
          "pollingIntervalSeconds": 1
        },
        "hooksConfiguration": {
          "preResolve": false,
          "postResolve": false,
          "mutatingPreResolve": false,
          "mutatingPostResolve": false,
          "mockResolve": {
            "enable": false,
            "subscriptionPollingIntervalMillis": 0
          }
        },
        "variablesConfiguration": {
          "injectVariables": []
        },
        "internal": false,
        "postResolveTransformations": []
      },
      {
        "content": "query FakeProducts($first: Int!) {\n  topProducts: federated_topProducts(first: $first) {\n    upc\n    name\n    price\n  }\n}\n",
        "name": "FakeProducts",
        "responseSchema": "{\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"topProducts\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"upc\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"price\":{\"type\":\"integer\"}},\"additionalProperties\":false,\"required\":[\"upc\"]}}},\"additionalProperties\":false}},\"additionalProperties\":false}",
        "variablesSchema": "{\"type\":\"object\",\"properties\":{\"first\":{\"type\":\"integer\"}},\"additionalProperties\":false,\"required\":[\"first\"]}",
        "interpolationVariablesSchema": "{\"type\":\"object\",\"properties\":{\"first\":{\"type\":\"integer\"}},\"additionalProperties\":false,\"required\":[\"first\"]}",
        "operationType": 0,
        "cacheConfig": {
          "enable": false,
          "maxAge": 60,
          "public": true,
          "staleWhileRevalidate": 60
        },
        "authenticationConfig": {
          "authRequired": false
        },
        "authorizationConfig": {
          "claims": [],
          "roleConfig": {
            "requireMatchAll": [],
            "requireMatchAny": [],
            "denyMatchAll": [],
            "denyMatchAny": []
          }
        },
        "liveQueryConfig": {
          "enable": true,
          "pollingIntervalSeconds": 1
        },
        "hooksConfiguration": {
          "preResolve": false,
          "postResolve": false,
          "mutatingPreResolve": false,
          "mutatingPostResolve": false,
          "mockResolve": {
            "enable": false,
            "subscriptionPollingIntervalMillis": 0
          }
        },
        "variablesConfiguration": {
          "injectVariables": []
        },
        "internal": false,
        "postResolveTransformations": []
      },
      {
        "content": "subscription PriceUpdates {\n  updatedPrice: federated_updatedPrice {\n    upc\n    name\n    price\n    reviews {\n      id\n      body\n      author {\n        id\n        name\n      }\n    }\n  }\n}\n",
        "name": "PriceUpdates",
        "responseSchema": "{\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"updatedPrice\":{\"type\":\"object\",\"properties\":{\"upc\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"price\":{\"type\":\"integer\"},\"reviews\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"},\"author\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"additionalProperties\":false,\"required\":[\"id\"]}},\"additionalProperties\":false,\"required\":[\"id\"]}}},\"additionalProperties\":false,\"required\":[\"upc\"]}},\"additionalProperties\":false,\"required\":[\"updatedPrice\"]}},\"additionalProperties\":false}",
        "variablesSchema": "{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false}",
        "interpolationVariablesSchema": "{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false}",
        "operationType": 2,
        "cacheConfig": {
          "enable": false,
          "maxAge": 0,
          "public": false,
          "staleWhileRevalidate": 0
        },
        "authenticationConfig": {
          "authRequired": false
        },
        "authorizationConfig": {
          "claims": [],
          "roleConfig": {
            "requireMatchAll": [],
            "requireMatchAny": [],
            "denyMatchAll": [],
            "denyMatchAny": []
          }
        },
        "hooksConfiguration": {
          "preResolve": false,
          "postResolve": false,
          "mutatingPreResolve": false,
          "mutatingPostResolve": false,
          "mockResolve": {
            "enable": false,
            "subscriptionPollingIntervalMillis": 0
          }
        },
        "variablesConfiguration": {
          "injectVariables": []
        },
        "internal": false,
        "postResolveTransformations": []
      },
      {
        "content": "mutation SetPrice($upc: String!, $price: Int!) {\n  setPrice: federated_setPrice(upc: $upc, price: $price) {\n    upc\n    name\n    price\n    weight\n  }\n}\n",
        "name": "SetPrice",
        "responseSchema": "{\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"setPrice\":{\"type\":\"object\",\"properties\":{\"upc\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"price\":{\"type\":\"integer\"},\"weight\":{\"type\":\"integer\"}},\"additionalProperties\":false,\"required\":[\"upc\"]}},\"additionalProperties\":false}},\"additionalProperties\":false}",
        "variablesSchema": "{\"type\":\"object\",\"properties\":{\"upc\":{\"type\":\"string\"},\"price\":{\"type\":\"integer\"}},\"additionalProperties\":false,\"required\":[\"upc\",\"price\"]}",
        "interpolationVariablesSchema": "{\"type\":\"object\",\"properties\":{\"upc\":{\"type\":\"string\"},\"price\":{\"type\":\"integer\"}},\"additionalProperties\":false,\"required\":[\"upc\",\"price\"]}",
        "operationType": 1,
        "cacheConfig": {
          "enable": false,
          "maxAge": 0,
          "public": false,
          "staleWhileRevalidate": 0
        },
        "authenticationConfig": {
          "authRequired": false
        },
        "authorizationConfig": {
          "claims": [],
          "roleConfig": {
            "requireMatchAll": [],
            "requireMatchAny": [],
            "denyMatchAll": [],
            "denyMatchAny": []
          }
        },
        "hooksConfiguration": {
          "preResolve": false,
          "postResolve": false,
          "mutatingPreResolve": false,
          "mutatingPostResolve": false,
          "mockResolve": {
            "enable": false,
            "subscriptionPollingIntervalMillis": 0
          }
        },
        "variablesConfiguration": {
          "injectVariables": []
        },
        "internal": false,
        "postResolveTransformations": []
      },
      {
        "content": "query TopProducts {\n  topProducts: federated_topProducts {\n    upc\n    name\n    price\n    reviews {\n      id\n      body\n      author {\n        id\n        name\n        username\n      }\n    }\n  }\n}\n",
        "name": "TopProducts",
        "responseSchema": "{\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"topProducts\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"upc\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"price\":{\"type\":\"integer\"},\"reviews\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"body\":{\"type\":\"string\"},\"author\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}},\"additionalProperties\":false,\"required\":[\"id\"]}},\"additionalProperties\":false,\"required\":[\"id\"]}}},\"additionalProperties\":false,\"required\":[\"upc\"]}}},\"additionalProperties\":false}},\"additionalProperties\":false}",
        "variablesSchema": "{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false}",
        "interpolationVariablesSchema": "{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false}",
        "operationType": 0,
        "cacheConfig": {
          "enable": true,
          "maxAge": 60,
          "public": true,
          "staleWhileRevalidate": 60
        },
        "authenticationConfig": {
          "authRequired": false
        },
        "authorizationConfig": {
          "claims": [],
          "roleConfig": {
            "requireMatchAll": [],
            "requireMatchAny": [],
            "denyMatchAll": [],
            "denyMatchAny": []
          }
        },
        "liveQueryConfig": {
          "enable": true,
          "pollingIntervalSeconds": 2
        },
        "hooksConfiguration": {
          "preResolve": false,
          "postResolve": false,
          "mutatingPreResolve": false,
          "mutatingPostResolve": false,
          "mockResolve": {
            "enable": false,
            "subscriptionPollingIntervalMillis": 0
          }
        },
        "variablesConfiguration": {
          "injectVariables": []
        },
        "internal": false,
        "postResolveTransformations": []
      },
      {
        "content": "query Users {\n  users: jsp_users {\n    id\n    name\n    website\n  }\n}\n",
        "name": "Users",
        "responseSchema": "{\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"object\",\"properties\":{\"users\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"},\"name\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"}},\"additionalProperties\":false}}},\"additionalProperties\":false}},\"additionalProperties\":false}",
        "variablesSchema": "{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false}",
        "interpolationVariablesSchema": "{\"type\":\"object\",\"properties\":{},\"additionalProperties\":false}",
        "operationType": 0,
        "cacheConfig": {
          "enable": true,
          "maxAge": 60,
          "public": true,
          "staleWhileRevalidate": 60
        },
        "authenticationConfig": {
          "authRequired": false
        },
        "authorizationConfig": {
          "claims": [],
          "roleConfig": {
            "requireMatchAll": [],
            "requireMatchAny": [],
            "denyMatchAll": [],
            "denyMatchAny": []
          }
        },
        "liveQueryConfig": {
          "enable": true,
          "pollingIntervalSeconds": 1
        },
        "hooksConfiguration": {
          "preResolve": false,
          "postResolve": false,
          "mutatingPreResolve": false,
          "mutatingPostResolve": false,
          "mockResolve": {
            "enable": false,
            "subscriptionPollingIntervalMillis": 0
          }
        },
        "variablesConfiguration": {
          "injectVariables": []
        },
        "internal": false,
        "postResolveTransformations": []
      }
    ],
    "engineConfiguration": {
      "defaultFlushInterval": 500,
      "graphqlSchema": "directive @fromClaim(name: Claim) on VARIABLE_DEFINITION\n\ndirective @hooksVariable on VARIABLE_DEFINITION\n\ndirective @jsonSchema(\n  \"\"\"\n  The value of both of these keywords MUST be a string.\n  \n  Both of these keywords can be used to decorate a user interface with\n  information about the data produced by this user interface.  A title\n  will preferably be short, whereas a description will provide\n  explanation about the purpose of the instance described by this\n  schema.\n  \"\"\"\n  title: String\n  \"\"\"\n  The value of both of these keywords MUST be a string.\n  \n  Both of these keywords can be used to decorate a user interface with\n  information about the data produced by this user interface.  A title\n  will preferably be short, whereas a description will provide\n  explanation about the purpose of the instance described by this\n  schema.\n  \"\"\"\n  description: String\n  \"\"\"\n  The value of \"multipleOf\" MUST be a number, strictly greater than 0.\n  \n  A numeric instance is valid only if division by this keyword's value\n  results in an integer.\n  \"\"\"\n  multipleOf: Int\n  \"\"\"\n  The value of \"maximum\" MUST be a number, representing an inclusive\n  upper limit for a numeric instance.\n  \n  If the instance is a number, then this keyword validates only if the\n  instance is less than or exactly equal to \"maximum\".\n  \"\"\"\n  maximum: Int\n  \"\"\"\n  The value of \"exclusiveMaximum\" MUST be number, representing an\n  exclusive upper limit for a numeric instance.\n  \n  If the instance is a number, then the instance is valid only if it\n  has a value strictly less than (not equal to) \"exclusiveMaximum\".\n  \"\"\"\n  exclusiveMaximum: Int\n  \"\"\"\n  The value of \"minimum\" MUST be a number, representing an inclusive\n  lower limit for a numeric instance.\n  \n  If the instance is a number, then this keyword validates only if the\n  instance is greater than or exactly equal to \"minimum\".\n  \"\"\"\n  minimum: Int\n  \"\"\"\n  The value of \"exclusiveMinimum\" MUST be number, representing an\n  exclusive lower limit for a numeric instance.\n  \n  If the instance is a number, then the instance is valid only if it\n  has a value strictly greater than (not equal to) \"exclusiveMinimum\".\n  \"\"\"\n  exclusiveMinimum: Int\n  \"\"\"\n  The value of this keyword MUST be a non-negative integer.\n  \n  A string instance is valid against this keyword if its length is less\n  than, or equal to, the value of this keyword.\n  \n  The length of a string instance is defined as the number of its\n  characters as defined by RFC 7159 [RFC7159].\n  \"\"\"\n  maxLength: Int\n  \"\"\"\n  The value of this keyword MUST be a non-negative integer.\n  \n  A string instance is valid against this keyword if its length is\n  greater than, or equal to, the value of this keyword.\n  \n  The length of a string instance is defined as the number of its\n  characters as defined by RFC 7159 [RFC7159].\n  \n  Omitting this keyword has the same behavior as a value of 0.\n  \"\"\"\n  minLength: Int\n  \"\"\"\n  The value of this keyword MUST be a string.  This string SHOULD be a\n  valid regular expression, according to the ECMA 262 regular\n  expression dialect.\n  \n  A string instance is considered valid if the regular expression\n  matches the instance successfully.  Recall: regular expressions are\n  not implicitly anchored.\n  \"\"\"\n  pattern: String\n  \"\"\"\n  The value of this keyword MUST be a non-negative integer.\n  \n  An array instance is valid against \"maxItems\" if its size is less\n  than, or equal to, the value of this keyword.\n  \"\"\"\n  maxItems: Int\n  \"\"\"\n  The value of this keyword MUST be a non-negative integer.\n  \n  An array instance is valid against \"minItems\" if its size is greater\n  than, or equal to, the value of this keyword.\n  \n  Omitting this keyword has the same behavior as a value of 0.\n  \"\"\"\n  minItems: Int\n  \"\"\"\n  The value of this keyword MUST be a boolean.\n  \n  If this keyword has boolean value false, the instance validates\n  successfully.  If it has boolean value true, the instance validates\n  successfully if all of its elements are unique.\n  \n  Omitting this keyword has the same behavior as a value of false.\n  \"\"\"\n  uniqueItems: Boolean\n  commonPattern: COMMON_REGEX_PATTERN\n) on VARIABLE_DEFINITION\n\n\"\"\"\nThe directive @injectCurrentDateTime injects a DateTime string of the current date and time into the variable.\nThis variable MUST be a string compatible scalar. \n\nThe default format, is: ISO 8601\nIf no format is chosen, the default format is used.\nCustom formats are allowed by specifying a format conforming to the Golang specification for specifying a date time format.\n\"\"\"\ndirective @injectCurrentDateTime(\n  format: WunderGraphDateTimeFormat = ISO8601\n  \"\"\"customFormat must conform to the Golang specification for specifying a date time format\"\"\"\n  customFormat: String\n) on VARIABLE_DEFINITION\n\n\"\"\"\nThe directive @injectGeneratedUUID injects a generated UUID into the variable.\nThis variable MUST be a string.\nAt the same time, it removes the variable from the input definition,\ndisallowing the user to supply it.\n\nThis means, the UUID is 100% generated server-side and can be considered untempered.\n\"\"\"\ndirective @injectGeneratedUUID on VARIABLE_DEFINITION\n\n\"\"\"\nThe @internalOperation Directive marks an Operation as internal.\nBy doing so, the Operation is no longer accessible from the public API.\nIt can only be accessed by internal services, like hooks.\n\"\"\"\ndirective @internalOperation on QUERY | MUTATION | SUBSCRIPTION\n\n\"\"\"The directive @injectEnvironmentVariable allows you to inject an environment variable into the variable definition.\"\"\"\ndirective @injectEnvironmentVariable(name: String!) on VARIABLE_DEFINITION\n\n\"\"\"\nThe @export directive instructs the Execution Planner to export the field during the execution into the variable of the 'as' argument.\nAs the execution is depth first, a field can only be used after it has been exported.\nAdditionally, a field can only be used after using the '_join' field or on a different data source.\nIt's not possible to export a field and use it in for the same data source.\n\nNote that the @export directive only works on fields that return a single value.\nIt's not possible to export a list or object field.\n\"\"\"\ndirective @export(\n  \"\"\"The argument 'as' is the name of the variable to export the field to.\"\"\"\n  as: String!\n) on FIELD\n\n\"\"\"\nThe directive @internal marks a variable definition as internal so that clients can't access it.\nThe field is also not visible in the public API.\nIt's only being used as an internal variable to export fields into.\n\"\"\"\ndirective @internal on VARIABLE_DEFINITION\n\n\"\"\"\nThe @transform directive allows to apply transformations to the response.\nBy applying the directive, the shape of the response can be altered,\nwhich will also modify the JSON-Schema of the response.\nThat is, you will keep full type safety and code-generation for transformed fields.\n\"\"\"\ndirective @transform(\n  \"\"\"\n  Using the 'get' transformation allows you to extract a nested field using a JSON path.\n  This is useful to unnest data, e.g. when using the '_join' field, which adds an extra layer of nesting.\n  \n  Example:\n  \n  query GetName {\n      name: me @transform(get: \"info.name\") {\n          info {\n              name\n          }\n      }\n  }\n  \n  Before the transformation, the resolve looks like this:\n  \n  {\n      \"name\": {\n          \"info\": {\n              \"name\": \"John Doe\"\n          }\n      }\n  }\n  \n  With the transformation applied, the response will be reshaped like this:\n  \n  {\n      \"name\": \"John Doe\"\n  }\n  \"\"\"\n  get: String\n) on FIELD\n\n\"\"\"\"\"\"\ndirective @countries_cacheControl(maxAge: Int, scope: countries_CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\n\ndirective @rbac(\n  \"\"\"the user must match all roles\"\"\"\n  requireMatchAll: [WG_ROLE]\n  \"\"\"the user must match at least one of the roles\"\"\"\n  requireMatchAny: [WG_ROLE]\n  \"\"\"the user must not match all of the roles\"\"\"\n  denyMatchAll: [WG_ROLE]\n  \"\"\"the user must not match any of the roles\"\"\"\n  denyMatchAny: [WG_ROLE]\n) on QUERY | MUTATION | SUBSCRIPTION\n\ntype Query {\n  federated_me: federated_User\n  federated_topProducts(first: Int = 5): [federated_Product]\n  countries_continents(filter: countries_ContinentFilterInput): [countries_Continent!]!\n  countries_continent(code: ID!): countries_Continent\n  countries_countries(filter: countries_CountryFilterInput): [countries_Country!]!\n  countries_country(code: ID!): countries_Country\n  countries_languages(filter: countries_LanguageFilterInput): [countries_Language!]!\n  countries_language(code: ID!): countries_Language\n  jsp_posts: [jsp_Post]\n  jsp_postComments(postID: String!): [jsp_Comment]\n  jsp_users: [jsp_User]\n  jsp_userPosts(userID: String!): [jsp_Post]\n}\n\ntype federated_User {\n  id: ID!\n  name: String\n  username: String\n  reviews: [federated_Review]\n  _join: Query!\n}\n\ntype federated_Review {\n  id: ID!\n  body: String\n  author: federated_User\n  product: federated_Product\n  _join: Query!\n}\n\ntype federated_Product {\n  upc: String!\n  reviews: [federated_Review]\n  name: String\n  price: Int\n  weight: Int\n  inStock: Boolean\n  shippingEstimate: Int\n  _join: Query!\n}\n\ntype Subscription {\n  federated_updatedPrice: federated_Product!\n}\n\ntype Mutation {\n  federated_setPrice(upc: String!, price: Int!): federated_Product\n}\n\nenum Claim {\n  EMAIL\n  EMAIL_VERIFIED\n  NAME\n  NICKNAME\n  LOCATION\n  PROVIDER\n}\n\nenum COMMON_REGEX_PATTERN {\n  EMAIL\n  DOMAIN\n}\n\nenum WunderGraphDateTimeFormat {\n  \"\"\"2006-01-02T15:04:05-0700\"\"\"\n  ISO8601\n  \"\"\"Mon Jan _2 15:04:05 2006\"\"\"\n  ANSIC\n  \"\"\"Mon Jan _2 15:04:05 MST 2006\"\"\"\n  UnixDate\n  \"\"\"Mon Jan 02 15:04:05 -0700 2006\"\"\"\n  RubyDate\n  \"\"\"02 Jan 06 15:04 MST\"\"\"\n  RFC822\n  \"\"\"02 Jan 06 15:04 -0700\"\"\"\n  RFC822Z\n  \"\"\"Monday, 02-Jan-06 15:04:05 MST\"\"\"\n  RFC850\n  \"\"\"Mon, 02 Jan 2006 15:04:05 MST\"\"\"\n  RFC1123\n  \"\"\"Mon, 02 Jan 2006 15:04:05 -0700\"\"\"\n  RFC1123Z\n  \"\"\"2006-01-02T15:04:05Z07:00\"\"\"\n  RFC3339\n  \"\"\"2006-01-02T15:04:05.999999999Z07:00\"\"\"\n  RFC3339Nano\n  \"\"\"3:04PM\"\"\"\n  Kitchen\n  \"\"\"Jan _2 15:04:05\"\"\"\n  Stamp\n  \"\"\"Jan _2 15:04:05.000\"\"\"\n  StampMilli\n  \"\"\"Jan _2 15:04:05.000000\"\"\"\n  StampMicro\n  \"\"\"Jan _2 15:04:05.000000000\"\"\"\n  StampNano\n}\n\n\"\"\"\"\"\"\ninput countries_ContinentFilterInput {\n  code: countries_StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\ninput countries_StringQueryOperatorInput {\n  eq: String\n  ne: String\n  in: [String]\n  nin: [String]\n  regex: String\n  glob: String\n}\n\ntype countries_Continent {\n  code: ID!\n  name: String!\n  countries: [countries_Country!]!\n  _join: Query!\n}\n\ntype countries_Country {\n  code: ID!\n  name: String!\n  native: String!\n  phone: String!\n  continent: countries_Continent!\n  capital: String\n  currency: String\n  languages: [countries_Language!]!\n  emoji: String!\n  emojiU: String!\n  states: [countries_State!]!\n  _join: Query!\n}\n\ntype countries_Language {\n  code: ID!\n  name: String\n  native: String\n  rtl: Boolean!\n  _join: Query!\n}\n\ntype countries_State {\n  code: String\n  name: String!\n  country: countries_Country!\n  _join: Query!\n}\n\n\"\"\"\"\"\"\ninput countries_CountryFilterInput {\n  code: countries_StringQueryOperatorInput\n  currency: countries_StringQueryOperatorInput\n  continent: countries_StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\ninput countries_LanguageFilterInput {\n  code: countries_StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\nenum countries_CacheControlScope {\n  \"\"\"\"\"\"\n  PUBLIC\n  \"\"\"\"\"\"\n  PRIVATE\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar countries_Upload\n\ntype jsp_Post {\n  id: Int\n  userId: Int\n  title: String\n  body: String\n  _join: Query!\n  comments: [jsp_Comment]\n}\n\ntype jsp_Comment {\n  id: Int\n  name: String\n  email: String\n  body: String\n  postId: Int\n  _join: Query!\n}\n\ntype jsp_User {\n  id: Int\n  name: String\n  username: String\n  email: String\n  address: jsp_Address\n  phone: String\n  website: String\n  company: jsp_Company\n  _join: Query!\n  posts: [jsp_Post]\n}\n\ntype jsp_Address {\n  street: String\n  suite: String\n  city: String\n  zipcode: String\n  geo: jsp_Geo\n  _join: Query!\n}\n\ntype jsp_Geo {\n  lat: String\n  lng: String\n  _join: Query!\n}\n\ntype jsp_Company {\n  name: String\n  catchPhrase: String\n  bs: String\n  _join: Query!\n}\n\nenum WG_ROLE {\n  admin\n  user\n}\n",
      "datasourceConfigurations": [
        {
          "kind": 2,
          "customGraphql": {
            "fetch": {
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "http://localhost:4001/graphql"
              },
              "method": 1,
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "federation": {
              "enabled": true,
              "serviceSdl": "type Query @extends {\n  me: User\n}\n\ntype User @key(fields: \"id\") {\n  id: ID!\n  name: String\n  username: String\n}\n"
            },
            "subscription": {
              "enabled": false,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "ws://localhost:4001/graphql"
              }
            },
            "upstreamSchema": "\"\"\"\"\"\"\ntype Query {\n  me: User\n}\n\n\"\"\"\"\"\"\ntype User {\n  id: ID!\n  name: String\n  username: String\n}\n"
          },
          "rootNodes": [
            {
              "typeName": "Query",
              "fieldNames": [
                "federated_me"
              ]
            },
            {
              "typeName": "federated_User",
              "fieldNames": [
                "id",
                "name",
                "username"
              ]
            }
          ],
          "childNodes": [
            {
              "typeName": "federated_User",
              "fieldNames": [
                "id",
                "name",
                "username"
              ]
            }
          ],
          "overrideFieldPathFromAlias": true,
          "directives": [
            {
              "directiveName": "federated_external",
              "renameTo": "external"
            },
            {
              "directiveName": "federated_requires",
              "renameTo": "requires"
            },
            {
              "directiveName": "federated_provides",
              "renameTo": "provides"
            },
            {
              "directiveName": "federated_key",
              "renameTo": "key"
            },
            {
              "directiveName": "federated_extends",
              "renameTo": "extends"
            }
          ]
        },
        {
          "kind": 2,
          "customGraphql": {
            "fetch": {
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "http://localhost:4002/graphql"
              },
              "method": 1,
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "federation": {
              "enabled": true,
              "serviceSdl": "type Review @key(fields: \"id\") {\n  id: ID!\n  body: String\n  author: User @provides(fields: \"username\")\n  product: Product\n}\n\ntype User @extends @key(fields: \"id\") {\n  id: ID! @external\n  username: String @external\n  reviews: [Review]\n}\n\ntype Product @extends @key(fields: \"upc\") {\n  upc: String! @external\n  reviews: [Review]\n}\n"
            },
            "subscription": {
              "enabled": false,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "ws://localhost:4002/graphql"
              }
            },
            "upstreamSchema": "\"\"\"\"\"\"\ntype Review {\n  id: ID!\n  body: String\n  author: User\n  product: Product\n}\n\n\"\"\"\"\"\"\ntype User {\n  id: ID!\n  username: String\n  reviews: [Review]\n}\n\n\"\"\"\"\"\"\ntype Product {\n  upc: String!\n  reviews: [Review]\n}\n\n\"\"\"\"\"\"\ntype Query\n"
          },
          "rootNodes": [
            {
              "typeName": "federated_Review",
              "fieldNames": [
                "id",
                "body",
                "author",
                "product"
              ]
            },
            {
              "typeName": "federated_User",
              "fieldNames": [
                "reviews"
              ]
            },
            {
              "typeName": "federated_Product",
              "fieldNames": [
                "reviews"
              ]
            }
          ],
          "childNodes": [
            {
              "typeName": "federated_Review",
              "fieldNames": [
                "id",
                "body",
                "author",
                "product"
              ]
            },
            {
              "typeName": "federated_User",
              "fieldNames": [
                "id"
              ]
            },
            {
              "typeName": "federated_Product",
              "fieldNames": [
                "upc"
              ]
            }
          ],
          "overrideFieldPathFromAlias": true,
          "directives": [
            {
              "directiveName": "federated_extends",
              "renameTo": "extends"
            },
            {
              "directiveName": "federated_external",
              "renameTo": "external"
            },
            {
              "directiveName": "federated_requires",
              "renameTo": "requires"
            },
            {
              "directiveName": "federated_provides",
              "renameTo": "provides"
            },
            {
              "directiveName": "federated_key",
              "renameTo": "key"
            }
          ]
        },
        {
          "kind": 2,
          "customGraphql": {
            "fetch": {
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "http://localhost:4003/graphql"
              },
              "method": 1,
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "federation": {
              "enabled": true,
              "serviceSdl": "type Query @extends {\n  topProducts(first: Int = 5): [Product]\n}\n\ntype Product @key(fields: \"upc\") {\n  upc: String!\n  name: String\n  price: Int\n  weight: Int\n}\n\ntype Subscription @extends {\n  updatedPrice: Product!\n}\n\ntype Mutation @extends {\n  setPrice(upc: String!, price: Int!): Product\n}"
            },
            "subscription": {
              "enabled": true,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "ws://localhost:4003/graphql"
              }
            },
            "upstreamSchema": "\"\"\"\"\"\"\ntype Subscription {\n  updatedPrice: Product!\n}\n\n\"\"\"\"\"\"\ntype Query {\n  topProducts(first: Int = 5): [Product]\n}\n\n\"\"\"\"\"\"\ntype Mutation {\n  setPrice(upc: String!, price: Int!): Product\n}\n\n\"\"\"\"\"\"\ntype Product {\n  upc: String!\n  name: String\n  price: Int\n  weight: Int\n}\n"
          },
          "rootNodes": [
            {
              "typeName": "Query",
              "fieldNames": [
                "federated_topProducts"
              ]
            },
            {
              "typeName": "federated_Product",
              "fieldNames": [
                "upc",
                "name",
                "price",
                "weight"
              ]
            },
            {
              "typeName": "Subscription",
              "fieldNames": [
                "federated_updatedPrice"
              ]
            },
            {
              "typeName": "Mutation",
              "fieldNames": [
                "federated_setPrice"
              ]
            }
          ],
          "childNodes": [
            {
              "typeName": "federated_Product",
              "fieldNames": [
                "upc",
                "name",
                "price",
                "weight"
              ]
            }
          ],
          "overrideFieldPathFromAlias": true,
          "directives": [
            {
              "directiveName": "federated_requires",
              "renameTo": "requires"
            },
            {
              "directiveName": "federated_provides",
              "renameTo": "provides"
            },
            {
              "directiveName": "federated_key",
              "renameTo": "key"
            },
            {
              "directiveName": "federated_extends",
              "renameTo": "extends"
            },
            {
              "directiveName": "federated_external",
              "renameTo": "external"
            }
          ]
        },
        {
          "kind": 2,
          "customGraphql": {
            "fetch": {
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "http://localhost:4004/graphql"
              },
              "method": 1,
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "federation": {
              "enabled": true,
              "serviceSdl": "type Product @extends @key(fields: \"upc\") {\n    upc: String! @external\n    weight: Int @external\n    price: Int @external\n    inStock: Boolean\n    shippingEstimate: Int @requires(fields: \"price weight\")\n}\n"
            },
            "subscription": {
              "enabled": false,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "ws://localhost:4004/graphql"
              }
            },
            "upstreamSchema": "\"\"\"\"\"\"\ntype Product {\n  upc: String!\n  weight: Int\n  price: Int\n  inStock: Boolean\n  shippingEstimate: Int\n}\n\n\"\"\"\"\"\"\ntype Query\n"
          },
          "rootNodes": [
            {
              "typeName": "federated_Product",
              "fieldNames": [
                "inStock",
                "shippingEstimate"
              ]
            }
          ],
          "childNodes": [
            {
              "typeName": "federated_Product",
              "fieldNames": [
                "upc"
              ]
            }
          ],
          "overrideFieldPathFromAlias": true,
          "directives": [
            {
              "directiveName": "federated_external",
              "renameTo": "external"
            },
            {
              "directiveName": "federated_requires",
              "renameTo": "requires"
            },
            {
              "directiveName": "federated_provides",
              "renameTo": "provides"
            },
            {
              "directiveName": "federated_key",
              "renameTo": "key"
            },
            {
              "directiveName": "federated_extends",
              "renameTo": "extends"
            }
          ]
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "federated_User",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "federated_Review",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "federated_Product",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 2,
          "customGraphql": {
            "fetch": {
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "https://countries.trevorblades.com/"
              },
              "method": 1,
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "federation": {
              "enabled": false,
              "serviceSdl": ""
            },
            "subscription": {
              "enabled": false,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "wss://countries.trevorblades.com/"
              }
            },
            "upstreamSchema": "\"\"\"\"\"\"\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\n\n\"\"\"\"\"\"\ntype Query {\n  continents(filter: ContinentFilterInput): [Continent!]!\n  continent(code: ID!): Continent\n  countries(filter: CountryFilterInput): [Country!]!\n  country(code: ID!): Country\n  languages(filter: LanguageFilterInput): [Language!]!\n  language(code: ID!): Language\n}\n\n\"\"\"\"\"\"\ninput ContinentFilterInput {\n  code: StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\ninput StringQueryOperatorInput {\n  eq: String\n  ne: String\n  in: [String]\n  nin: [String]\n  regex: String\n  glob: String\n}\n\n\"\"\"\"\"\"\ntype Continent {\n  code: ID!\n  name: String!\n  countries: [Country!]!\n}\n\n\"\"\"\"\"\"\ntype Country {\n  code: ID!\n  name: String!\n  native: String!\n  phone: String!\n  continent: Continent!\n  capital: String\n  currency: String\n  languages: [Language!]!\n  emoji: String!\n  emojiU: String!\n  states: [State!]!\n}\n\n\"\"\"\"\"\"\ntype Language {\n  code: ID!\n  name: String\n  native: String\n  rtl: Boolean!\n}\n\n\"\"\"\"\"\"\ntype State {\n  code: String\n  name: String!\n  country: Country!\n}\n\n\"\"\"\"\"\"\ninput CountryFilterInput {\n  code: StringQueryOperatorInput\n  currency: StringQueryOperatorInput\n  continent: StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\ninput LanguageFilterInput {\n  code: StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PUBLIC\n  \"\"\"\"\"\"\n  PRIVATE\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload\n"
          },
          "rootNodes": [
            {
              "typeName": "Query",
              "fieldNames": [
                "countries_continents",
                "countries_continent",
                "countries_countries",
                "countries_country",
                "countries_languages",
                "countries_language"
              ]
            }
          ],
          "childNodes": [
            {
              "typeName": "countries_Continent",
              "fieldNames": [
                "code",
                "name",
                "countries"
              ]
            },
            {
              "typeName": "countries_Country",
              "fieldNames": [
                "code",
                "name",
                "native",
                "phone",
                "continent",
                "capital",
                "currency",
                "languages",
                "emoji",
                "emojiU",
                "states"
              ]
            },
            {
              "typeName": "countries_Language",
              "fieldNames": [
                "code",
                "name",
                "native",
                "rtl"
              ]
            },
            {
              "typeName": "countries_State",
              "fieldNames": [
                "code",
                "name",
                "country"
              ]
            }
          ],
          "overrideFieldPathFromAlias": true,
          "directives": [
            {
              "directiveName": "countries_cacheControl",
              "renameTo": "cacheControl"
            }
          ]
        },
        {
          "kind": 1,
          "rootNodes": [
            {
              "typeName": "Query",
              "fieldNames": [
                "jsp_posts"
              ]
            }
          ],
          "childNodes": [],
          "customRest": {
            "fetch": {
              "method": 0,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "https://jsonplaceholder.typicode.com/posts"
              },
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "subscription": {
              "enabled": false,
              "pollingIntervalMillis": 500,
              "skipPublishSameResponse": false
            },
            "defaultTypeName": "",
            "statusCodeTypeMappings": []
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 1,
          "rootNodes": [
            {
              "typeName": "Query",
              "fieldNames": [
                "jsp_postComments"
              ]
            }
          ],
          "childNodes": [],
          "customRest": {
            "fetch": {
              "method": 0,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "https://jsonplaceholder.typicode.com/posts/{{ .arguments.postID }}/comments"
              },
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "subscription": {
              "enabled": false,
              "pollingIntervalMillis": 500,
              "skipPublishSameResponse": false
            },
            "defaultTypeName": "",
            "statusCodeTypeMappings": []
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 1,
          "rootNodes": [
            {
              "typeName": "Query",
              "fieldNames": [
                "jsp_users"
              ]
            }
          ],
          "childNodes": [],
          "customRest": {
            "fetch": {
              "method": 0,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "https://jsonplaceholder.typicode.com/users"
              },
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "subscription": {
              "enabled": false,
              "pollingIntervalMillis": 500,
              "skipPublishSameResponse": false
            },
            "defaultTypeName": "",
            "statusCodeTypeMappings": []
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 1,
          "rootNodes": [
            {
              "typeName": "Query",
              "fieldNames": [
                "jsp_userPosts"
              ]
            }
          ],
          "childNodes": [],
          "customRest": {
            "fetch": {
              "method": 0,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "https://jsonplaceholder.typicode.com/users/{{ .arguments.userID }}/posts"
              },
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "subscription": {
              "enabled": false,
              "pollingIntervalMillis": 500,
              "skipPublishSameResponse": false
            },
            "defaultTypeName": "",
            "statusCodeTypeMappings": []
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "countries_Continent",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "countries_Country",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "countries_Language",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "countries_State",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "jsp_Post",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "jsp_Comment",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "jsp_User",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "jsp_Address",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "jsp_Geo",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 0,
          "rootNodes": [
            {
              "typeName": "jsp_Company",
              "fieldNames": [
                "_join"
              ]
            }
          ],
          "childNodes": [],
          "customStatic": {
            "data": {
              "kind": 0,
              "staticVariableContent": "{}",
              "placeholderVariableName": "",
              "environmentVariableDefaultValue": "",
              "environmentVariableName": ""
            }
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 1,
          "rootNodes": [
            {
              "typeName": "jsp_User",
              "fieldNames": [
                "posts"
              ]
            }
          ],
          "childNodes": [],
          "customRest": {
            "fetch": {
              "method": 0,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "https://jsonplaceholder.typicode.com/users/{{ .object.id }}/posts"
              },
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "subscription": {
              "enabled": false,
              "pollingIntervalMillis": 500,
              "skipPublishSameResponse": false
            },
            "defaultTypeName": "",
            "statusCodeTypeMappings": []
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        },
        {
          "kind": 1,
          "rootNodes": [
            {
              "typeName": "jsp_Post",
              "fieldNames": [
                "comments"
              ]
            }
          ],
          "childNodes": [],
          "customRest": {
            "fetch": {
              "method": 0,
              "url": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "https://jsonplaceholder.typicode.com/posts/{{ .object.id }}/comments"
              },
              "body": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": ""
              },
              "header": {},
              "query": []
            },
            "subscription": {
              "enabled": false,
              "pollingIntervalMillis": 500,
              "skipPublishSameResponse": false
            },
            "defaultTypeName": "",
            "statusCodeTypeMappings": []
          },
          "overrideFieldPathFromAlias": false,
          "directives": []
        }
      ],
      "fieldConfigurations": [
        {
          "typeName": "federated_User",
          "fieldName": "name",
          "requiresFields": [
            "id"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_User",
          "fieldName": "username",
          "requiresFields": [
            "id"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "federated_me",
          "disableDefaultFieldMapping": false,
          "path": [
            "me"
          ],
          "argumentsConfiguration": [],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Review",
          "fieldName": "body",
          "requiresFields": [
            "id"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Review",
          "fieldName": "author",
          "requiresFields": [
            "id"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Review",
          "fieldName": "product",
          "requiresFields": [
            "id"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_User",
          "fieldName": "reviews",
          "requiresFields": [
            "id"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Product",
          "fieldName": "reviews",
          "requiresFields": [
            "upc"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "federated_topProducts",
          "argumentsConfiguration": [
            {
              "name": "first",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            }
          ],
          "disableDefaultFieldMapping": false,
          "path": [
            "topProducts"
          ],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Product",
          "fieldName": "name",
          "requiresFields": [
            "upc"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Product",
          "fieldName": "price",
          "requiresFields": [
            "upc"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Product",
          "fieldName": "weight",
          "requiresFields": [
            "upc"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "Mutation",
          "fieldName": "federated_setPrice",
          "argumentsConfiguration": [
            {
              "name": "upc",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            },
            {
              "name": "price",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            }
          ],
          "disableDefaultFieldMapping": false,
          "path": [
            "setPrice"
          ],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Subscription",
          "fieldName": "federated_updatedPrice",
          "disableDefaultFieldMapping": false,
          "path": [
            "updatedPrice"
          ],
          "argumentsConfiguration": [],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Product",
          "fieldName": "inStock",
          "requiresFields": [
            "upc"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Product",
          "fieldName": "shippingEstimate",
          "requiresFields": [
            "upc"
          ],
          "argumentsConfiguration": [],
          "path": [],
          "disableDefaultFieldMapping": false,
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_User",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Review",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "federated_Product",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "countries_continents",
          "argumentsConfiguration": [
            {
              "name": "filter",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            }
          ],
          "disableDefaultFieldMapping": false,
          "path": [
            "continents"
          ],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "countries_continent",
          "argumentsConfiguration": [
            {
              "name": "code",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            }
          ],
          "disableDefaultFieldMapping": false,
          "path": [
            "continent"
          ],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "countries_countries",
          "argumentsConfiguration": [
            {
              "name": "filter",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            }
          ],
          "disableDefaultFieldMapping": false,
          "path": [
            "countries"
          ],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "countries_country",
          "argumentsConfiguration": [
            {
              "name": "code",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            }
          ],
          "disableDefaultFieldMapping": false,
          "path": [
            "country"
          ],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "countries_languages",
          "argumentsConfiguration": [
            {
              "name": "filter",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            }
          ],
          "disableDefaultFieldMapping": false,
          "path": [
            "languages"
          ],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "countries_language",
          "argumentsConfiguration": [
            {
              "name": "code",
              "sourceType": 1,
              "sourcePath": [],
              "renderConfiguration": 0
            }
          ],
          "disableDefaultFieldMapping": false,
          "path": [
            "language"
          ],
          "requiresFields": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "jsp_posts",
          "disableDefaultFieldMapping": true,
          "argumentsConfiguration": [],
          "requiresFields": [],
          "path": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "jsp_postComments",
          "disableDefaultFieldMapping": true,
          "argumentsConfiguration": [],
          "requiresFields": [],
          "path": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "jsp_users",
          "disableDefaultFieldMapping": true,
          "argumentsConfiguration": [],
          "requiresFields": [],
          "path": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "Query",
          "fieldName": "jsp_userPosts",
          "disableDefaultFieldMapping": true,
          "argumentsConfiguration": [],
          "requiresFields": [],
          "path": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "countries_Continent",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "countries_Country",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "countries_Language",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "countries_State",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "jsp_Post",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "jsp_Comment",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "jsp_User",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "jsp_Address",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "jsp_Geo",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "jsp_Company",
          "fieldName": "_join",
          "disableDefaultFieldMapping": true,
          "path": [
            "_join"
          ],
          "requiresFields": [],
          "argumentsConfiguration": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "jsp_User",
          "fieldName": "posts",
          "disableDefaultFieldMapping": true,
          "argumentsConfiguration": [
            {
              "name": "userID",
              "sourceType": 0,
              "sourcePath": [
                "id"
              ],
              "renderConfiguration": 1
            }
          ],
          "requiresFields": [],
          "path": [],
          "unescapeResponseJson": false
        },
        {
          "typeName": "jsp_Post",
          "fieldName": "comments",
          "disableDefaultFieldMapping": true,
          "argumentsConfiguration": [
            {
              "name": "postID",
              "sourceType": 0,
              "sourcePath": [
                "id"
              ],
              "renderConfiguration": 1
            }
          ],
          "requiresFields": [],
          "path": [],
          "unescapeResponseJson": false
        }
      ],
      "typeConfigurations": [
        {
          "typeName": "federated_User",
          "renameTo": "User"
        },
        {
          "typeName": "federated_Review",
          "renameTo": "Review"
        },
        {
          "typeName": "federated_Product",
          "renameTo": "Product"
        },
        {
          "typeName": "countries_ContinentFilterInput",
          "renameTo": "ContinentFilterInput"
        },
        {
          "typeName": "countries_StringQueryOperatorInput",
          "renameTo": "StringQueryOperatorInput"
        },
        {
          "typeName": "countries_Continent",
          "renameTo": "Continent"
        },
        {
          "typeName": "countries_Country",
          "renameTo": "Country"
        },
        {
          "typeName": "countries_Language",
          "renameTo": "Language"
        },
        {
          "typeName": "countries_State",
          "renameTo": "State"
        },
        {
          "typeName": "countries_CountryFilterInput",
          "renameTo": "CountryFilterInput"
        },
        {
          "typeName": "countries_LanguageFilterInput",
          "renameTo": "LanguageFilterInput"
        },
        {
          "typeName": "countries_CacheControlScope",
          "renameTo": "CacheControlScope"
        },
        {
          "typeName": "countries_Upload",
          "renameTo": "Upload"
        }
      ]
    },
    "s3UploadConfiguration": [],
    "corsConfiguration": {
      "maxAge": 120,
      "allowedHeaders": [
        "*"
      ],
      "allowedMethods": [
        "GET",
        "POST"
      ],
      "exposedHeaders": [
        "*"
      ],
      "allowCredentials": true,
      "allowedOrigins": [
        {
          "kind": 0,
          "environmentVariableDefaultValue": "",
          "environmentVariableName": "",
          "placeholderVariableName": "",
          "staticVariableContent": "http://localhost:3000"
        }
      ]
    },
    "authenticationConfig": {
      "cookieBased": {
        "providers": [
          {
            "kind": 0,
            "githubConfig": {
              "clientId": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "demo"
              },
              "clientSecret": {
                "kind": 0,
                "environmentVariableDefaultValue": "",
                "environmentVariableName": "",
                "placeholderVariableName": "",
                "staticVariableContent": "demo"
              }
            },
            "id": "github"
          }
        ],
        "authorizedRedirectUris": [
          {
            "kind": 0,
            "environmentVariableDefaultValue": "",
            "environmentVariableName": "",
            "placeholderVariableName": "",
            "staticVariableContent": "http://localhost:3000/"
          }
        ],
        "authorizedRedirectUriRegexes": []
      },
      "hooks": {
        "postAuthentication": false,
        "mutatingPostAuthentication": false,
        "revalidateAuthentication": false
      },
      "jwksBased": {
        "providers": []
      }
    },
    "additionalHostNames": []
  },
  "dangerouslyEnableGraphQLEndpoint": false
}