directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE

type User {
  id: ID!
  name: String
  username: String
  reviews: [Review]
}

type Query {
  me: User
  topProducts(first: Int = 5): [Product]
  getUsers: [OasUser]
  getUsersUserId(user_id: Int!): OasUser
  continents(filter: ContinentFilterInput): [Continent!]!
  continent(code: ID!): Continent
  countries(filter: CountryFilterInput): [Country!]!
  country(code: ID!): Country
  languages(filter: LanguageFilterInput): [Language!]!
  language(code: ID!): Language
  posts: [Post]
  postComments(postID: String!): [Comment]
  users: [JSP_User]
  userPosts(userID: String!): [Post]
}

type Review {
  id: ID!
  body: String
  author: User
  product: Product
}

type Product {
  upc: String!
  reviews: [Review]
  name: String
  price: Int
  weight: Int
  inStock: Boolean
  shippingEstimate: Int
}

type Mutation {
  setPrice(upc: String!, price: Int!): Product
}

type Subscription {
  updatedPrice: Product!
}

type OasUser {
  id: Int
  name: String
  country_code: String
}

input ContinentFilterInput {
  code: StringQueryOperatorInput
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

type Continent {
  code: ID!
  name: String!
  countries: [Country!]!
}

type Country {
  code: ID!
  name: String!
  native: String!
  phone: String!
  continent: Continent!
  capital: String
  currency: String
  languages: [Language!]!
  emoji: String!
  emojiU: String!
  states: [State!]!
}

type Language {
  code: ID!
  name: String
  native: String
  rtl: Boolean!
}

type State {
  code: String
  name: String!
  country: Country!
}

input CountryFilterInput {
  code: StringQueryOperatorInput
  currency: StringQueryOperatorInput
  continent: StringQueryOperatorInput
}

input LanguageFilterInput {
  code: StringQueryOperatorInput
}

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

scalar Upload

type Post {
  id: Int
  userId: Int
  title: String
  body: String
  comments: [Comment]
}

type Comment {
  id: Int
  name: String
  email: String
  body: String
  postId: Int
}

type JSP_User {
  id: Int
  name: String
  username: String
  email: String
  address: Address
  phone: String
  website: String
  company: Company
  posts: [Post]
}

type Address {
  street: String
  suite: String
  city: String
  zipcode: String
  geo: Geo
}

type Geo {
  lat: String
  lng: String
}

type Company {
  name: String
  catchPhrase: String
  bs: String
}
