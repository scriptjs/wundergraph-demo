// Code generated by wunderctl. DO NOT EDIT.

export interface CountryWeatherInput {
	code: string;
}

export interface DemoInput {
	city: string;
}

export interface FakeProductsInput {
	first: number;
}

export interface ProtectedSetPriceInput {
	upc: string;
	price: number;
}

export interface ProtectedWeatherInput {
	city: string;
}

export interface SetPriceInput {
	upc: string;
	price: number;
}

export interface TopProductsInput {
	random?: boolean;
}

export interface AllPricesResponse {
	data?: AllPricesResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface CountriesResponse {
	data?: CountriesResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface CountryWeatherResponse {
	data?: CountryWeatherResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface DemoResponse {
	data?: DemoResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface FakeProductsResponse {
	data?: FakeProductsResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface PriceUpdatesResponse {
	data?: PriceUpdatesResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface ProtectedPriceUpdatesResponse {
	data?: ProtectedPriceUpdatesResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface ProtectedSetPriceResponse {
	data?: ProtectedSetPriceResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface ProtectedWeatherResponse {
	data?: ProtectedWeatherResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface SetPriceResponse {
	data?: SetPriceResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface TopProductsResponse {
	data?: TopProductsResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface UsersResponse {
	data?: UsersResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface AllPricesResponseData {
	prices?: {
		upc: string;
		price?: number;
	}[];
}

export interface CountriesResponseData {
	countries: {
		code: string;
		name: string;
	}[];
}

export interface CountryWeatherResponseData {
	countries_country?: {
		code: string;
		name: string;
		capital?: string;
		weather: {
			temperature?: {
				actual?: number;
			};
			summary?: {
				title?: string;
				description?: string;
			};
		};
	};
}

export interface DemoResponseData {
	weather_getCityByName?: {
		name?: string;
		weather?: {
			summary?: {
				title?: string;
				description?: string;
			};
			temperature?: {
				actual?: number;
				feelsLike?: number;
				min?: number;
				max?: number;
			};
		};
	};
}

export interface FakeProductsResponseData {
	topProducts?: {
		upc: string;
		name?: string;
		price?: number;
	}[];
}

export interface PriceUpdatesResponseData {
	updatedPrice: {
		upc: string;
		name?: string;
		price?: number;
		reviews?: {
			id: string;
			body?: string;
			author?: {
				id: string;
				name?: string;
			};
		}[];
	};
}

export interface ProtectedPriceUpdatesResponseData {
	updatedPrice: {
		upc: string;
		name?: string;
		price?: number;
		reviews?: {
			id: string;
			body?: string;
			author?: {
				id: string;
				name?: string;
			};
		}[];
	};
}

export interface ProtectedSetPriceResponseData {
	setPrice?: {
		upc: string;
		name?: string;
		price?: number;
		weight?: number;
	};
}

export interface ProtectedWeatherResponseData {
	weather_getCityByName?: {
		weather?: {
			temperature?: {
				actual?: number;
			};
			summary?: {
				title?: string;
				description?: string;
			};
		};
	};
}

export interface SetPriceResponseData {
	setPrice?: {
		upc: string;
		name?: string;
		price?: number;
		weight?: number;
	};
}

export interface TopProductsResponseData {
	topProducts?: {
		upc: string;
		name?: string;
		price?: number;
		reviews?: {
			id: string;
			body?: string;
			author?: {
				id: string;
				name?: string;
				username?: string;
				reviews?: {
					product?: {
						name?: string;
					};
				}[];
			};
		}[];
	}[];
}

export interface UsersResponseData {
	users?: {
		id?: number;
		name?: string;
		website?: string;
	}[];
}

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface GraphQLError {
	message: string;
	path?: ReadonlyArray<string | number>;
}
